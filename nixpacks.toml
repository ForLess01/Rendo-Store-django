[phases.setup]
nixPkgs = [
    'python310',
    'python310Packages.pip',
    'python310Packages.virtualenv',
    'python310Packages.gunicorn',  # Asegurando que Gunicorn est√© disponible
    'postgresql',
    'gcc',
    'libffi',
    'zlib',
    'libjpeg',
    'libpqxx',
    'openssl',
    'pkg-config'
]

[phases.install]
cmds = [
    # Crear un entorno virtual con --system-site-packages para acceder a paquetes de Nix
    "python -m venv --system-site-packages /app/venv",
    # Usar pip del entorno virtual directamente
    "/app/venv/bin/pip install --upgrade pip setuptools wheel",
    "/app/venv/bin/pip install -r requirements.txt"
]

[phases.build]
cmds = [
    "/app/venv/bin/python manage.py collectstatic --noinput"
]

[start]
cmd = "/app/venv/bin/python -m gunicorn myproject.wsgi --log-file -"

[build.args]
PYTHONUNBUFFERED = "1"
PYTHONPATH = "/app"

[build.environment]
NIXPKGS_ALLOW_UNFREE = "1"
