[phases.setup]
nixPkgs = [
    'python310',
    'python310Packages.pip',
    'python310Packages.virtualenv',
    'python310Packages.gunicorn',
    'python310Packages.django',
    'python310Packages.djangorestframework',
    'python310Packages.whitenoise',
    'python310Packages.psycopg2',
    'python310Packages.dj-database-url',
    'python310Packages.python-dotenv',
    'python310Packages.pillow',
    # Dependencias de desarrollo
    'python310Packages.django-browser-reload',
    'python310Packages.django-tailwind',
    'postgresql',
    'gcc',
    'libffi',
    'zlib',
    'libjpeg',
    'libpqxx',
    'openssl',
    'pkg-config'
]

[phases.install]
cmds = [
    # Crear entorno virtual con acceso a paquetes del sistema
    "python -m venv --system-site-packages /app/venv",
    # Usar pip del entorno virtual
    "/app/venv/bin/pip install --upgrade pip setuptools wheel",
    # Instalar dependencias sin sus dependencias (ya instaladas por Nix)
    # y sin ejecutar tests para evitar problemas con websockets
    "NIXPKGS_ALLOW_UNFREE=1 PIP_NO_DEPS=1 /app/venv/bin/pip install --no-deps -r requirements.txt"
]

[phases.build]
cmds = [
    "/app/venv/bin/python manage.py collectstatic --noinput --clear"
]

[start]
cmd = "/app/venv/bin/gunicorn myproject.wsgi --log-file - --bind 0.0.0.0:$PORT"

[build.args]
PYTHONUNBUFFERED = "1"
PYTHONPATH = "/app"

[build.environment]
# Permitir paquetes no libres
NIXPKGS_ALLOW_UNFREE = "1"
# Evitar la ejecución de tests durante la instalación
PYTHONDONTWRITEBYTECODE = "1"
PYTHONUNBUFFERED = "1"
PYTHONPATH = "/app"
# Deshabilitar compilación de extensiones opcionales
CFLAGS = "-O0"
LDFLAGS = "-s"